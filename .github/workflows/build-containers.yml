name: Build and Test Containers

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-containers:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        container:
          - name: test-consumer
            context: ./systemUnderTest
            dockerfile: ./systemUnderTest/Dockerfile
          - name: test-harness
            context: ./testHarness
            dockerfile: ./testHarness/Dockerfile

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build ${{ matrix.container.name }}
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.container.context }}
        file: ${{ matrix.container.dockerfile }}
        push: false
        tags: ${{ matrix.container.name }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Show image size
      run: |
        docker images ${{ matrix.container.name }}:latest --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"

  integration-test:
    runs-on: ubuntu-latest
    needs: build-containers

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build all containers
      run: |
        docker build -t test-consumer ./systemUnderTest
        docker build -t test-harness ./testHarness

    - name: Start infrastructure services
      run: |
        docker-compose up -d redis localstack redisinsight
        echo "Waiting for services to be ready..."
        sleep 10

    - name: Check service health
      run: |
        docker-compose ps
        docker-compose logs redis
        docker-compose logs localstack

    - name: Run test consumer in background
      run: |
        docker-compose up -d test-consumer
        echo "Test consumer started"

    - name: Run test harness and capture output
      run: |
        echo "Running test harness..."
        docker-compose up test-harness > test-output.log 2>&1 || true
        echo "=== Test Harness Output ==="
        cat test-output.log

    - name: Verify test success
      run: |
        if grep -q "Test Success" test-output.log; then
          echo "✅ Integration test PASSED: Test Success message found"
          exit 0
        elif grep -q "Test Failure" test-output.log; then
          echo "❌ Integration test FAILED: Test Failure message found"
          cat test-output.log
          exit 1
        else
          echo "❌ Integration test FAILED: No clear success/failure message found"
          cat test-output.log
          exit 1
        fi

    - name: Show container logs on failure
      if: failure()
      run: |
        echo "=== Redis logs ==="
        docker-compose logs redis
        echo "=== LocalStack logs ==="
        docker-compose logs localstack
        echo "=== Test Consumer logs ==="
        docker-compose logs test-consumer
        echo "=== Test Harness logs ==="
        docker-compose logs test-harness

    - name: Cleanup
      if: always()
      run: |
        docker-compose down -v
        docker system prune -f